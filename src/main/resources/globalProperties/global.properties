# Maintain lower-casing of pilot names
pilotNameIdMap={"agl":10016,"ce":51,"coh":10032,"duke":10010,"ei":20004,"enovos":20007,"eon":20003,"fpl":10017,"fresh":20009,"gpc":10028,"ho":10008,"je":81,"nve":10009,"origin":10019,"ovo":20010,"pp":10024,"rmp":10021,"samba":20001,"scg":10033,"srp":10004,"ue":10002,"ui":10020,"viesgo":20006,"vse":20012,"se":10030,"mce":10036,"bch":10035,"ameren":10057,"ouc":10041,"avista":10046,"nsp":40003,"nspsmb":40002}

uploaders.backendApiHanDataUploader.connectTimeOut=60000
uploaders.backendApiHanDataUploader.readTimeOut=60000

generated.automation.property.path=/tmp/bidgely/automation/properties/

email.validation.propertyFilepath=/tmp/automation/test-data/

# format:
#	pilotConfigRootKey:
#		configKey:automationConfigRootKey
#
properties.to.update={"sftp_pull":{"sftpServerUserName":"bidgely.sftpUsername","sftpServerPassword":"bidgely.sftpServerPassword","sftpServerHostName":"bidgely.sftpServerHostName"}}

email.image.folderPath=/tmp/bidgely/
email.extracted.image.folderName=extracted/
email.downloaded.recoImage.folderName=recommendations/

kw.to.ccf.conversion.value=30384.2152107

# Mention the component(s) for any pilot which will need more time to run.
pilot.heavy.test.components={"ameren_gb":["Emails", "S3Ingestion", "BillProjection", "BudgetAlert"], "avista-res-id_gb":["avistaResID"], "avista_gb":["SurveyNSME", "SurveyNSMG", "SurveyNSMGG", "SurveyNSMEG"], "nve_gb":["SFTPIngestion"], "rmp_gb_monthly":["Notifications", "SFTPIngestion"], "pp_gb_monthly":["SFTPIngestion"], "pnm_gb_monthly":["SFTPIngestion"], "cva_gb":["SFTPIngestion"], "dom_gb":["SFTPIngestion"], "rmpsmb_gb_monthly":["SFTPIngestion"], "pseg_gb":["part1","part2","part3","part4","part5","part6","part7","part8","part9","part10","part11","part12","part13","part14","part15","part16","part17","part18","part19","part20","part21","part22","part23","part24"]}

# Map of pilot's disagg module. If pilot's entry is not present below, we assume
# that the pilot is using MATLAB disagg module.
pilot.disagg.module={10009:"python", 10017:"python", 20012:"python"}

# The Consumption Unit value within which the value could vary
python.disagg.consumption.offset.value=10
# The Cost Unit value within which the value could vary
python.disagg.cost.offset.value=10

# Appliance id and appliance name map
appliance.id.name.map={2:"pool", 3:"spaceHeating", 4:"airConditioning", 7:"waterHeating", 18:"electricVehicle", 59:"laundry", 8:"alwaysOn", 66:"entertainment", 71:"lighting", 9:"refrigeration", 5:"cooking", 99:"other"}
